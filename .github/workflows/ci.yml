name: "Ruby Gem CI"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      COVERAGE: "true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.3'
          bundler-cache: true

      - name: Run RSpec with coverage
        run: bundle exec rspec

      - name: Check coverage thresholds
        run: |
          if [ ! -f coverage/.last_run.json ]; then
            echo "Error: Coverage report not generated"
            exit 1
          fi
          
          # Extract coverage percentage from the last run report
          COVERAGE_PCT=$(grep -o '"covered_percent":[0-9.]*' coverage/.last_run.json | grep -o '[0-9.]*')
          echo "Current coverage: $COVERAGE_PCT%"
          
          # Check if coverage meets the threshold (90%)
          if (( $(echo "$COVERAGE_PCT < 90" | bc -l) )); then
            echo "Error: Coverage ($COVERAGE_PCT%) is below the minimum threshold (90%)"
            exit 1
          else
            echo "Coverage check passed: $COVERAGE_PCT% âœ…"
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          retention-days: 7

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint with RuboCop
        run: bundle exec rubocop --parallel

      - name: Security audit dependencies
        run: |
          bundle binstubs bundler-audit brakeman || true
          bin/bundler-audit --update || true

      - name: Static analysis (optional)
        run: bin/brakeman -q -w2 || true
